---
import "../styles/global.css";
import ThemeToggle from "./ThemeToggle.astro";

const navItems = [
  { title: "Experiencia", label: "experiencia", url: "/#experiencia" },
  { title: "Proyectos", label: "proyectos", url: "/#proyectos" },
  { title: "Sobre m√≠", label: "sobre-mi", url: "/#sobre-mi" },
  { title: "Contacto", label: "contacto", url: "/#contacto" },
];
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2 pb-20"
>
  <nav
    id="main-nav"
    class="flex px-3 py-1 sm:px-4 sm:py-2 text-xs sm:text-sm font-medium rounded-full justify-center items-center
  transition-all duration-300
  text-gray-700 dark:text-white"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition-colors
          hover:text-purple-600 dark:hover:text-purple-300"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const nav = document.getElementById("main-nav");
    if (!nav) return;

    const html = document.documentElement;

    const handleScroll = () => {
      if (window.scrollY > 10) {
        nav.classList.add("scrolled");

        if (html.classList.contains("dark")) {
          nav.classList.remove("light-scroll");
          nav.classList.add("dark-scroll");
        } else {
          nav.classList.remove("dark-scroll");
          nav.classList.add("light-scroll");
        }
      } else {
        nav.classList.remove("scrolled", "light-scroll", "dark-scroll");
      }
    };

    handleScroll();
    window.addEventListener("scroll", handleScroll);

    const sections = document.querySelectorAll("section");
    const navLinks = document.querySelectorAll("#main-nav a[aria-label]");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            navLinks.forEach((link) => {
              if (link.getAttribute("aria-label") === entry.target.id) {
                link.classList.add("text-purple-600", "dark:text-purple-300");
              } else {
                link.classList.remove(
                  "text-purple-600",
                  "dark:text-purple-300"
                );
              }
            });
          }
        });
      },
      {
        root: null,
        threshold: 0.3,
      }
    );

    sections.forEach((section) => observer.observe(section));

    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => observer.observe(section));
      }
    };
  });
</script>

<style>
  #main-nav {
    background-color: transparent;
    border: 1px solid transparent;
    backdrop-filter: none;
    box-shadow: none;
    transition: all 0.3s ease;
  }

  #main-nav.scrolled {
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    border-width: 1px;
  }

  #main-nav.light-scroll {
    background-color: rgba(255, 255, 255, 0.6);
    border-color: #777777;
    color: #333333;
  }

  #main-nav.dark-scroll {
    background-color: rgba(0, 0, 0, 0.6);
    border-color: white;
    color: white;
  }
</style>
